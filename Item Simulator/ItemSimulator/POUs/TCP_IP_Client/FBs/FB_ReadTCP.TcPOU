<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_ReadTCP" Id="{aac96250-2e96-4f28-bc14-e6734eab24a4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ReadTCP 
VAR_INPUT
	stTCPConnection		:ST_TCPConnection;
END_VAR
VAR_OUTPUT
	aEANRegistry		:ARRAY[0..GVL_Constant.ITEM_ARRAY_SIZE] OF T_MaxString;
	bIsConnected		:BOOL;
END_VAR
VAR_IN_OUT
END_VAR
VAR
	fbConnectSocket		:FB_SocketConnect;
	fbDisconnect		:FB_SocketClose;
	rConnectedSocket	:F_TRIG;
	tRefreshRead		:FB_ClockPulsDetailed;
	fbSocketRecive		:FB_SocketReceive;
	rReadComplete		:R_TRIG;
	aReadBytes			:ARRAY[0..1023] OF BYTE;
	sReadString			:T_MaxString;
	iRead				:UINT;
	i					:INT;

	bReadComplete		:BOOL;
	bResetEANRegistry	:BOOL;
	hSocket				:T_HSOCKET;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
A_ConnectToReadSocket();

IF bIsConnected THEN
	A_ReadFromTCPSocket();
END_IF
]]></ST>
    </Implementation>
    <Action Name="A_ConnectToReadSocket" Id="{1e5e4340-eed2-4558-a157-bc81a0804adb}">
      <Implementation>
        <ST><![CDATA[IF stTCPConnection.bSocketConnect THEN

	//Connect read port
	fbConnectSocket(
		sRemoteHost:=stTCPConnection.sRemoteHost,
		nRemotePort:=stTCPConnection.nRemotePort, 
		bExecute:=TRUE,
		tTimeout:=stTCPConnection.tTimeOut,
		hSocket=>hSocket);
	ELSE
		//Disconnect read port
		fbConnectSocket(bExecute:=FALSE);
		fbDisconnect(hSocket:=hSocket);
		bIsConnected := FALSE;
END_IF

rConnectedSocket(CLK:=fbConnectSocket.bBusy);

IF rConnectedSocket.Q AND NOT fbConnectSocket.bError THEN
	bIsConnected := TRUE;
END_IF

]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_ReadFromTCPSocket" Id="{edba4541-df43-47d7-b9a2-8ceebf2c598d}">
      <Implementation>
        <ST><![CDATA[IF bIsConnected THEN

	//Refresh read timer
	tRefreshRead(bEnable:=TRUE, tPulsLengthOn:=T#2MS, tPulsLengthOff:=T#2MS);
	
	fbSocketRecive(
		hSocket:=hSocket, 
		cbLen:=SIZEOF(aReadBytes),
		pDest:=ADR(aReadBytes),
		bExecute:=tRefreshRead.bPuls);
		
	rReadComplete(CLK:=fbSocketRecive.nRecBytes > 0);
	
	
	//If byte read, copy into string.
	IF rReadComplete.Q THEN
		MEMCPY(destAddr:=ADR(sReadString), srcAddr:=ADR(aReadBytes),n:=fbSocketRecive.nRecBytes);
		aEANRegistry[iRead] := sReadString;
		MEMSET(destAddr:=ADR(aReadBytes),fillByte:=0, n:=fbSocketRecive.nRecBytes);
		MEMSET(destAddr:=ADR(sReadString),fillByte:=0, n:=fbSocketRecive.nRecBytes);
		iRead:=iRead+1;
		bReadComplete:=TRUE;
	ELSE
		bReadComplete:=FALSE;
	END_IF
END_IF


//Reset registry of EAN strings
IF PRG_Simulator.bStartGenerator OR PRG_Simulator.bStopGenerator OR (PRG_Simulator.i > PRG_Simulator.nTimeCount) OR stTCPConnection.bReset THEN
	FOR i := 0 TO GVL_Constant.ITEM_ARRAY_SIZE DO 
		aEANRegistry[i] := '';
	END_FOR

	iRead := 0;
	MEMSET(destAddr:=ADR(aReadBytes),fillByte:=0, n:=fbSocketRecive.nRecBytes);
	MEMSET(destAddr:=ADR(sReadString),fillByte:=0, n:=fbSocketRecive.nRecBytes);	
	
	
	//Reset commands
	stTCPConnection.bReset :=FALSE;
END_IF

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="FB_ReadTCP">
      <LineId Id="50" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="34" Count="1" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="FB_ReadTCP.A_ConnectToReadSocket">
      <LineId Id="2" Count="21" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ReadTCP.A_ReadFromTCPSocket">
      <LineId Id="2" Count="42" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>