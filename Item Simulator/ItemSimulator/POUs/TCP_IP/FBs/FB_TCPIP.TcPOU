<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_TCPIP" Id="{8a1361cc-b4d0-445e-95d0-5145c7c9d975}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TCPIP IMPLEMENTS I_TCPConnection
VAR_INPUT
	bNewItem				:BOOL;
	bConnectedRead			:BOOL;
	bConnectedWrite			:BOOL;
	bResetEANRegistry		:BOOL;
	ReadSocketHandler		:T_HSOCKET;
	WriteSocketHandler		:T_HSOCKET;
	iRead					:UINT;
	iWrite					:UINT;
END_VAR
VAR_OUTPUT
	aEANRegistry		:ARRAY[0..GVL_Constant.ITEM_ARRAY_SIZE] OF T_MaxString;
END_VAR
VAR
	sReadString				:T_MaxString;
	fbWrite					:FB_SocketSend;
	fbRead					:FB_SocketReceive;
	aWriteBytes				:ARRAY[0..1023] OF BYTE;
	aReadBytes				:ARRAY[0..1023] OF BYTE;
	nWriteLen				:UDINT;
	ReadComplete			:R_TRIG;
	tRefreshRead			:FB_ClockPulsDetailed;
	WriteSignal				:F_TRIG;
	i						:INT;
	
	
	bReadSocketIsConnected	:BOOL;
	bWriteSocketIsConnected	:BOOL;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Call Read & Write connected
A_TCPReading();
A_TCPWriting();

//Reset registry of EAN strings
IF PRG_Simulator.bStartGenerator OR PRG_Simulator.bStopGenerator OR (PRG_Simulator.i > PRG_Simulator.nTimeCount) OR bResetEANRegistry THEN
	FOR i := 0 TO GVL_Constant.ITEM_ARRAY_SIZE DO 
		aEANRegistry[i] := '';
	END_FOR

	iRead := 0;
	iWrite := 0;
	MEMSET(destAddr:=ADR(aReadBytes),fillByte:=0, n:=fbRead.nRecBytes);
	MEMSET(destAddr:=ADR(sReadString),fillByte:=0, n:=fbRead.nRecBytes);	
	
	
	//Reset commands
	bResetEANRegistry:=FALSE;
END_IF

bReadSocketIsConnected := ConnectToReadSocket.bReadSocketIsConnected;




]]></ST>
    </Implementation>
    <Action Name="A_TCPReading" Id="{c6684671-51e7-43f4-84c9-10649b1f3710}">
      <Implementation>
        <ST><![CDATA[IF bConnectedRead THEN

	//Refresh read timer
	tRefreshRead(bEnable:=TRUE, tPulsLengthOn:=T#2MS, tPulsLengthOff:=T#2MS);
	
	fbRead(
		hSocket:=ReadSocketHandler, 
		cbLen:=SIZEOF(aReadBytes),
		pDest:=ADR(aReadBytes),
		bExecute:=tRefreshRead.bPuls);
		
	ReadComplete(CLK:=fbRead.nRecBytes > 0);
	
	
	//If byte read, copy into string.
	IF ReadComplete.Q THEN
		MEMCPY(destAddr:=ADR(sReadString), srcAddr:=ADR(aReadBytes),n:=fbRead.nRecBytes);
		aEANRegistry[iRead] := sReadString;
		MEMSET(destAddr:=ADR(aReadBytes),fillByte:=0, n:=fbRead.nRecBytes);
		MEMSET(destAddr:=ADR(sReadString),fillByte:=0, n:=fbRead.nRecBytes);
		iRead:=iRead+1;
	END_IF
END_IF;]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_TCPWriting" Id="{a8da9708-cafa-4ccf-b159-6892f3e2e304}">
      <Implementation>
        <ST><![CDATA[IF bConnectedWrite THEN	
	//Falling edge of item generator
	WriteSignal(CLK:=GVL_ItemSimulator.bSignalOut);
	
	IF WriteSignal.Q THEN
		//Get length of string written
		nWriteLen := INT_TO_UDINT(LEN(STR:=aEANRegistry[iWrite]));
	
		//Copy string into array of bytes
		MEMCPY(destAddr:=ADR(aWriteBytes),srcAddr:=ADR(aEANRegistry[iWrite]),n:=nWriteLen);
		iWrite := iWrite + 1;
	END_IF
		
	//Write byte array to TCP server
	fbWrite(
		hSocket:=WriteSocketHandler, 
		cbLen:=nWriteLen,
		pSrc:=ADR(aWriteBytes),
		bExecute:=WriteSignal.Q AND PRG_Simulator.stItemGenFromReg.bEnableGenerator);
END_IF;

]]></ST>
      </Implementation>
    </Action>
    <Method Name="ConnectToWriteSocket" Id="{62e8bb86-74c6-43ef-8a05-a273e912ad1b}">
      <Declaration><![CDATA[METHOD PUBLIC ConnectToWriteSocket : BOOL
VAR_INPUT
	bConnectToWriteSocket	:BOOL;
	sRemoteHost				:STRING;
	nRemotePort				:INT;
	bExecute				:BOOL;
	tTimeout 				:TIME;
	hSocket 				:T_HSOCKET;
END_VAR
VAR
	bWriteSocketIsConnected	:BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteToTCPSocket" Id="{796f152f-baf6-47c9-a7c2-d34cdf6deef6}">
      <Declaration><![CDATA[METHOD PUBLIC WriteToTCPSocket : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TCPIP">
      <LineId Id="526" Count="3" />
      <LineId Id="559" Count="0" />
      <LineId Id="599" Count="0" />
      <LineId Id="786" Count="1" />
      <LineId Id="637" Count="0" />
      <LineId Id="785" Count="0" />
      <LineId Id="784" Count="0" />
      <LineId Id="638" Count="2" />
      <LineId Id="725" Count="0" />
      <LineId Id="789" Count="1" />
      <LineId Id="788" Count="0" />
      <LineId Id="602" Count="0" />
      <LineId Id="695" Count="0" />
      <LineId Id="682" Count="0" />
      <LineId Id="531" Count="0" />
      <LineId Id="681" Count="0" />
      <LineId Id="532" Count="1" />
      <LineId Id="170" Count="0" />
    </LineIds>
    <LineIds Name="FB_TCPIP.A_TCPReading">
      <LineId Id="2" Count="17" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_TCPIP.A_TCPWriting">
      <LineId Id="2" Count="18" />
      <LineId Id="22" Count="1" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_TCPIP.ConnectToWriteSocket">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TCPIP.WriteToTCPSocket">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>