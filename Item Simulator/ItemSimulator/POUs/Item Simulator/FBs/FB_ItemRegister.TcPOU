<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_ItemRegister" Id="{c0a9bbfd-92cb-44d8-9279-e542f10353df}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ItemRegister
VAR_INPUT
	bSignal					: BOOL;
	bReset					: BOOL;
END_VAR
VAR_OUTPUT
	aItemOnTimeRegistry		: ARRAY[0..GVL_Constant.ITEM_ARRAY_SIZE] OF TIME;
	aItemOffTimeRegistry	: ARRAY[0..GVL_Constant.ITEM_ARRAY_SIZE] OF TIME;
	
	nTimeCount				: INT;
END_VAR
VAR
	tTimeOn					: TON;
	tReadTimeOn				: TIME;
	osReadOnTime			: F_TRIG;
	
	tTimeOFF				: TON;
	tReadTimeOff			: TIME;
	osReadOffTime			: R_TRIG;
	
	i						: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bSignal THEN
	tTimeOn(IN:=TRUE, PT:=T#5S, ET=>tReadTimeOn);
ELSE
	tTimeOFF(IN:=TRUE, PT:=T#5S, ET=>tReadTimeOff);
END_IF;

//Write on time to array
M_ReadOnTime();

//Write off time to array
M_ReadOffTime();

//Reset array for time registry
M_ResetTimeRegistry();]]></ST>
    </Implementation>
    <Method Name="M_ReadOffTime" Id="{0dd02e9a-9bb9-495a-8635-92fa2193c059}">
      <Declaration><![CDATA[//On R_Trig of Signal
METHOD PUBLIC M_ReadOffTime
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[osReadOffTime(CLK:=bSignal);

IF osReadOffTime.Q THEN
	aItemOffTimeRegistry[nTimeCount] := tReadTimeOff;
	tTimeOff(IN:=FALSE);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ReadOnTime" Id="{5f071343-b7ea-4d4c-8e55-b7e89db6d0ee}">
      <Declaration><![CDATA[//On F_Trig of Signal
METHOD PUBLIC M_ReadOnTime
VAR_INPUT
END_VAR
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[osReadOnTime(CLK:=bSignal);

IF osReadOnTime.Q THEN
	aItemOnTimeRegistry[nTimeCount] := tReadTimeOn;
	nTimeCount := nTimeCount +1;
	tTimeOn(IN:=FALSE);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ResetTimeRegistry" Id="{aec981ff-8120-4b14-9fab-616a1f61d830}">
      <Declaration><![CDATA[METHOD PUBLIC M_ResetTimeRegistry
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bReset THEN
	tTimeOFF(IN:=FALSE);
	tTimeOn(IN:=FALSE);
	
	FOR i := 0 TO nTimeCount DO 
		aItemOffTimeRegistry[i] := T#0S;
		aItemOnTimeRegistry [i] := T#0S;
	END_FOR
	
	nTimeCount := 0;	
	bReset := FALSE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_ItemRegister">
      <LineId Id="109" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="FB_ItemRegister.M_ReadOffTime">
      <LineId Id="6" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ItemRegister.M_ReadOnTime">
      <LineId Id="14" Count="5" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ItemRegister.M_ResetTimeRegistry">
      <LineId Id="6" Count="11" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>